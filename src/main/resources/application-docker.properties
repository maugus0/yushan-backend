# ============================================================================
# Docker Profile Configuration
# This profile is used when running the app in containers via docker-compose
# ============================================================================

# Server
server.port=${SERVER_PORT:8080}

# Re-enable auto-configuration (override base application.yml excludes)
spring.autoconfigure.exclude=

# PostgreSQL Datasource (from docker-compose env)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:yushan}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

# Redis (from docker-compose env)
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=1000ms

# Use Redis for session & cache in docker profile
spring.session.store-type=redis
spring.session.redis.namespace=yushan:session
spring.cache.type=redis

# Logging
logging.level.org.springframework.boot.autoconfigure=INFO

# JWT (read from environment with safe defaults)
jwt.secret=${JWT_SECRET:YushanBackendJWTSecretKey2024ForSecureTokenGenerationAndValidation}
jwt.access-token.expiration=${JWT_ACCESS_TOKEN_EXPIRATION:900000}
jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800000}
jwt.issuer=${JWT_ISSUER:yushan-backend}
jwt.algorithm=${JWT_ALGORITHM:HS256}